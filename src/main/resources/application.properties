# jpa settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

# mysql database connection:
spring.datasource.jdbc-url=jdbc:mysql://localhost:3306/spade
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# mssql database connection:
spring.second-datasource.jdbc-url=jdbc:sqlserver://localhost:1433;databaseName=authspade;encrypt=true;trustServerCertificate=true
spring.second-datasource.username=test
spring.second-datasource.password=test
spring.second-datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

# admin account username and password:
account.user.name=root
account.user.password=

DATA_PATH=data/

# custom error pages
server.error.whitelabel.enabled=false

# logger
logging.level.root=INFO
logging.level.cz.zcu.fav.kiv.antipatterndetectionapp=TRACE

# security
auth.realm.login=http://localhost:8081/login
auth.realm.logout=http://localhost:8081/logout
auth.realm.authenticate=http://localhost:8081/authenticate

#default configuration user
default_user_id = 2

## oauth2 -> keycloak

# localhost is here thanks to KC_HOSTNAME_URL property in the docker-compose. Otherwise, there should be docker service name.
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9080/auth/realms/spade
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9080/auth/realms/spade/protocol/openid-connect/certs


#keycloak.auth-server-url=http://localhost:9080/auth
#keycloak.realm=spade
#keycloak.resource=spade-client

logging.level.org.springframework.security=debug